{
    "LOGIN_USER": "SELECT id, f_name, l_name, email, logon_id, last_logged_on, is_admin, status_id FROM person WHERE logon_id = %s AND password = %s;",
    "UPDATE_LAST_LOGON": "UPDATE person SET last_logged_on = CURRENT_TIMESTAMP() WHERE id = %s;",
    "SEARCH_BOOKS": "SELECT bk.*, auth.id as author_id, auth.name AS author, awd.id as award_id, awd.name AS award, fmt.id as format_id, fmt.type AS format, gnr.id as genre_id, gnr.type AS genre FROM (SELECT bk.*, (SELECT COUNT(book_id) FROM book_copy bc WHERE bc.book_id = bk.id) AS total_copies, (SELECT COUNT(book_id) FROM book_copy bc WHERE bc.book_id = bk.id AND borrow_status_id = 1) AS available_copies FROM (SELECT publishDate, rating, likedPercent, bk.id, title, series, description, isbn, edition, pages, numRatings, coverImg, price, bk.lang_id, lang.name as lang, bk.publisher_id, pub.name as pub_name FROM book bk LEFT OUTER JOIN publisher pub ON pub.id = bk.publisher_id LEFT OUTER JOIN language lang ON lang.id = bk.lang_id  WHERE (LOWER(title) LIKE %s OR LOWER(description) LIKE %s) AND lang_id = %s ORDER BY %s DESC LIMIT %s, %s) bk ) bk   LEFT OUTER JOIN book_author bauth on bk.id = bauth.book_id    LEFT OUTER JOIN author auth on bauth.author_id = auth.id    LEFT OUTER JOIN book_award bawd on bk.id = bawd.book_id    LEFT OUTER JOIN award awd on bawd.award_id = awd.id    LEFT OUTER JOIN book_format bfmt on bk.id = bfmt.book_id    LEFT OUTER JOIN format fmt on bfmt.format_id = fmt.id    LEFT OUTER JOIN book_genre bgnr on bk.id = bgnr.book_id    LEFT OUTER JOIN genre gnr on bgnr.genre_id = gnr.id;",
    "SEARCH_RECOMMENDED_BOOKS": "SELECT bk.*, auth.id as author_id, auth.name AS author, awd.id as award_id, awd.name AS award, fmt.id as format_id, fmt.type AS format, gnr.id as genre_id, gnr.type AS genre FROM (SELECT bk.*, (SELECT COUNT(book_id) FROM book_copy bc WHERE bc.book_id = bk.id) AS total_copies, (SELECT COUNT(book_id) FROM book_copy bc WHERE bc.book_id = bk.id AND borrow_status_id = 1) AS available_copies FROM (SELECT publishDate, rating, likedPercent, bk.id, title, series, description, isbn, edition, pages, numRatings, coverImg, price, bk.lang_id, lang.name as lang, bk.publisher_id, pub.name as pub_name FROM book bk LEFT OUTER JOIN publisher pub ON pub.id = bk.publisher_id LEFT OUTER JOIN language lang ON lang.id = bk.lang_id  WHERE (LOWER(title) LIKE %s OR LOWER(description) LIKE %s) AND lang_id = %s ORDER BY RAND(), %s DESC LIMIT %s, %s) bk ) bk   LEFT OUTER JOIN book_author bauth on bk.id = bauth.book_id    LEFT OUTER JOIN author auth on bauth.author_id = auth.id    LEFT OUTER JOIN book_award bawd on bk.id = bawd.book_id    LEFT OUTER JOIN award awd on bawd.award_id = awd.id    LEFT OUTER JOIN book_format bfmt on bk.id = bfmt.book_id    LEFT OUTER JOIN format fmt on bfmt.format_id = fmt.id    LEFT OUTER JOIN book_genre bgnr on bk.id = bgnr.book_id    LEFT OUTER JOIN genre gnr on bgnr.genre_id = gnr.id;",
    "LANGUAGES": "SELECT id, name FROM language WHERE name <> '';",
    "GET_BOOK_AVAILABILITY": "SELECT id FROM book_copy WHERE book_id = %s AND borrow_status_id = 1 LIMIT 1;",
    "CREATE_BORROW_RECORD": "INSERT INTO borrowal (book_copy_id, person_id, borrow_date, return_date) VALUES (%s, %s, CURRENT_DATE(), DATE_ADD(CURRENT_DATE(), INTERVAL 32 DAY));",
    "UPDATE_BORROW_STATUS": "UPDATE book_copy SET borrow_status_id = %s WHERE id = %s;"
}